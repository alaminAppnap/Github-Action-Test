name: Production application

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  deploy-self-hosted:
    name: Deployment on Self-Hosted Runner
    runs-on: self-hosted
    timeout-minutes: 1  # Set timeout for job execution
    steps:
      - name: Check for runner availability
        run: |
          echo "Attempting to deploy on self-hosted..."
          sleep 60  # Wait for 1 minute
          echo "Self-hosted runner timed out, moving to ubuntu-latest"
        continue-on-error: true  # Allows the job to continue even if it fails

      - name: Execute production deployment
        run: |
          TOKEN=${{ secrets.ATOKEN }}
          OWNER=${{ github.repository_owner }}
          REPO=${{ github.event.repository.name }}
          BRANCHES=$(curl -H "Authorization: token $TOKEN" -s "https://api.github.com/repos/$OWNER/$REPO/branches")
          echo "Branches: $BRANCHES"

  deploy-ubuntu:
    name: Fallback to Ubuntu Runner
    runs-on: ubuntu-latest
    needs: deploy-self-hosted
    if: failure()  # This job runs only if the self-hosted job fails or times out

    steps:
      - name: Execute production deployment
        run: |
          echo "Deploying to production on ubuntu-latest..."
          TOKEN=${{ secrets.ATOKEN }}
          OWNER=${{ github.repository_owner }}
          REPO=${{ github.event.repository.name }}
          BRANCHES=$(curl -H "Authorization: token $TOKEN" -s "https://api.github.com/repos/$OWNER/$REPO/branches")
          echo "Branches: $BRANCHES"
